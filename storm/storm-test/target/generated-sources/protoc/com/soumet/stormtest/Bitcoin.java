// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bitcoin.proto

package com.soumet.stormtest;

public final class Bitcoin {
  private Bitcoin() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TransactionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string hash = 1;
    boolean hasHash();
    String getHash();
  }
  public static final class Transaction extends
      com.google.protobuf.GeneratedMessage
      implements TransactionOrBuilder {
    // Use Transaction.newBuilder() to construct.
    private Transaction(Builder builder) {
      super(builder);
    }
    private Transaction(boolean noInit) {}
    
    private static final Transaction defaultInstance;
    public static Transaction getDefaultInstance() {
      return defaultInstance;
    }
    
    public Transaction getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Transaction_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Transaction_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private java.lang.Object hash_;
    public boolean hasHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHash() {
      java.lang.Object ref = hash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHashBytes() {
      java.lang.Object ref = hash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      hash_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHashBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHashBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.soumet.stormtest.Bitcoin.Transaction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.soumet.stormtest.Bitcoin.TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Transaction_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Transaction_fieldAccessorTable;
      }
      
      // Construct using com.soumet.stormtest.Bitcoin.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hash_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.soumet.stormtest.Bitcoin.Transaction.getDescriptor();
      }
      
      public com.soumet.stormtest.Bitcoin.Transaction getDefaultInstanceForType() {
        return com.soumet.stormtest.Bitcoin.Transaction.getDefaultInstance();
      }
      
      public com.soumet.stormtest.Bitcoin.Transaction build() {
        com.soumet.stormtest.Bitcoin.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.soumet.stormtest.Bitcoin.Transaction buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.soumet.stormtest.Bitcoin.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.soumet.stormtest.Bitcoin.Transaction buildPartial() {
        com.soumet.stormtest.Bitcoin.Transaction result = new com.soumet.stormtest.Bitcoin.Transaction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hash_ = hash_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.soumet.stormtest.Bitcoin.Transaction) {
          return mergeFrom((com.soumet.stormtest.Bitcoin.Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.soumet.stormtest.Bitcoin.Transaction other) {
        if (other == com.soumet.stormtest.Bitcoin.Transaction.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHash()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hash_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string hash = 1;
      private java.lang.Object hash_ = "";
      public boolean hasHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHash() {
        java.lang.Object ref = hash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hash_ = value;
        onChanged();
        return this;
      }
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }
      void setHash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hash_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.soumet.stormtest.Transaction)
    }
    
    static {
      defaultInstance = new Transaction(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.soumet.stormtest.Transaction)
  }
  
  public interface BlockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string hash = 1;
    boolean hasHash();
    String getHash();
    
    // required int32 confirmations = 2;
    boolean hasConfirmations();
    int getConfirmations();
    
    // required int32 size = 3;
    boolean hasSize();
    int getSize();
    
    // required int32 height = 4;
    boolean hasHeight();
    int getHeight();
    
    // repeated .com.soumet.stormtest.Transaction tx = 5;
    java.util.List<com.soumet.stormtest.Bitcoin.Transaction> 
        getTxList();
    com.soumet.stormtest.Bitcoin.Transaction getTx(int index);
    int getTxCount();
    java.util.List<? extends com.soumet.stormtest.Bitcoin.TransactionOrBuilder> 
        getTxOrBuilderList();
    com.soumet.stormtest.Bitcoin.TransactionOrBuilder getTxOrBuilder(
        int index);
    
    // required int32 version = 6;
    boolean hasVersion();
    int getVersion();
    
    // required int32 time = 7;
    boolean hasTime();
    int getTime();
    
    // required double nonce = 8;
    boolean hasNonce();
    double getNonce();
    
    // required string bits = 9;
    boolean hasBits();
    String getBits();
    
    // required float difficulty = 10;
    boolean hasDifficulty();
    float getDifficulty();
    
    // required string chainwork = 11;
    boolean hasChainwork();
    String getChainwork();
    
    // required string previousblockhash = 12;
    boolean hasPreviousblockhash();
    String getPreviousblockhash();
    
    // required string nextblockhash = 13;
    boolean hasNextblockhash();
    String getNextblockhash();
  }
  public static final class Block extends
      com.google.protobuf.GeneratedMessage
      implements BlockOrBuilder {
    // Use Block.newBuilder() to construct.
    private Block(Builder builder) {
      super(builder);
    }
    private Block(boolean noInit) {}
    
    private static final Block defaultInstance;
    public static Block getDefaultInstance() {
      return defaultInstance;
    }
    
    public Block getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Block_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Block_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string hash = 1;
    public static final int HASH_FIELD_NUMBER = 1;
    private java.lang.Object hash_;
    public boolean hasHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHash() {
      java.lang.Object ref = hash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHashBytes() {
      java.lang.Object ref = hash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 confirmations = 2;
    public static final int CONFIRMATIONS_FIELD_NUMBER = 2;
    private int confirmations_;
    public boolean hasConfirmations() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getConfirmations() {
      return confirmations_;
    }
    
    // required int32 size = 3;
    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getSize() {
      return size_;
    }
    
    // required int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getHeight() {
      return height_;
    }
    
    // repeated .com.soumet.stormtest.Transaction tx = 5;
    public static final int TX_FIELD_NUMBER = 5;
    private java.util.List<com.soumet.stormtest.Bitcoin.Transaction> tx_;
    public java.util.List<com.soumet.stormtest.Bitcoin.Transaction> getTxList() {
      return tx_;
    }
    public java.util.List<? extends com.soumet.stormtest.Bitcoin.TransactionOrBuilder> 
        getTxOrBuilderList() {
      return tx_;
    }
    public int getTxCount() {
      return tx_.size();
    }
    public com.soumet.stormtest.Bitcoin.Transaction getTx(int index) {
      return tx_.get(index);
    }
    public com.soumet.stormtest.Bitcoin.TransactionOrBuilder getTxOrBuilder(
        int index) {
      return tx_.get(index);
    }
    
    // required int32 version = 6;
    public static final int VERSION_FIELD_NUMBER = 6;
    private int version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getVersion() {
      return version_;
    }
    
    // required int32 time = 7;
    public static final int TIME_FIELD_NUMBER = 7;
    private int time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTime() {
      return time_;
    }
    
    // required double nonce = 8;
    public static final int NONCE_FIELD_NUMBER = 8;
    private double nonce_;
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public double getNonce() {
      return nonce_;
    }
    
    // required string bits = 9;
    public static final int BITS_FIELD_NUMBER = 9;
    private java.lang.Object bits_;
    public boolean hasBits() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getBits() {
      java.lang.Object ref = bits_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          bits_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getBitsBytes() {
      java.lang.Object ref = bits_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        bits_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required float difficulty = 10;
    public static final int DIFFICULTY_FIELD_NUMBER = 10;
    private float difficulty_;
    public boolean hasDifficulty() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getDifficulty() {
      return difficulty_;
    }
    
    // required string chainwork = 11;
    public static final int CHAINWORK_FIELD_NUMBER = 11;
    private java.lang.Object chainwork_;
    public boolean hasChainwork() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getChainwork() {
      java.lang.Object ref = chainwork_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          chainwork_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChainworkBytes() {
      java.lang.Object ref = chainwork_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        chainwork_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string previousblockhash = 12;
    public static final int PREVIOUSBLOCKHASH_FIELD_NUMBER = 12;
    private java.lang.Object previousblockhash_;
    public boolean hasPreviousblockhash() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getPreviousblockhash() {
      java.lang.Object ref = previousblockhash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          previousblockhash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPreviousblockhashBytes() {
      java.lang.Object ref = previousblockhash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        previousblockhash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string nextblockhash = 13;
    public static final int NEXTBLOCKHASH_FIELD_NUMBER = 13;
    private java.lang.Object nextblockhash_;
    public boolean hasNextblockhash() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getNextblockhash() {
      java.lang.Object ref = nextblockhash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nextblockhash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNextblockhashBytes() {
      java.lang.Object ref = nextblockhash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nextblockhash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      hash_ = "";
      confirmations_ = 0;
      size_ = 0;
      height_ = 0;
      tx_ = java.util.Collections.emptyList();
      version_ = 0;
      time_ = 0;
      nonce_ = 0D;
      bits_ = "";
      difficulty_ = 0F;
      chainwork_ = "";
      previousblockhash_ = "";
      nextblockhash_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConfirmations()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBits()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDifficulty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChainwork()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPreviousblockhash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextblockhash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTxCount(); i++) {
        if (!getTx(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHashBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, confirmations_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
      for (int i = 0; i < tx_.size(); i++) {
        output.writeMessage(5, tx_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, version_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(8, nonce_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getBitsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(10, difficulty_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getChainworkBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getPreviousblockhashBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getNextblockhashBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHashBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, confirmations_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      for (int i = 0; i < tx_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tx_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, version_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, nonce_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getBitsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, difficulty_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getChainworkBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPreviousblockhashBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getNextblockhashBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.soumet.stormtest.Bitcoin.Block prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.soumet.stormtest.Bitcoin.BlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Block_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_Block_fieldAccessorTable;
      }
      
      // Construct using com.soumet.stormtest.Bitcoin.Block.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTxFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hash_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        confirmations_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (txBuilder_ == null) {
          tx_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          txBuilder_.clear();
        }
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        nonce_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        bits_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        difficulty_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        chainwork_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        previousblockhash_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        nextblockhash_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.soumet.stormtest.Bitcoin.Block.getDescriptor();
      }
      
      public com.soumet.stormtest.Bitcoin.Block getDefaultInstanceForType() {
        return com.soumet.stormtest.Bitcoin.Block.getDefaultInstance();
      }
      
      public com.soumet.stormtest.Bitcoin.Block build() {
        com.soumet.stormtest.Bitcoin.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.soumet.stormtest.Bitcoin.Block buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.soumet.stormtest.Bitcoin.Block result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.soumet.stormtest.Bitcoin.Block buildPartial() {
        com.soumet.stormtest.Bitcoin.Block result = new com.soumet.stormtest.Bitcoin.Block(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hash_ = hash_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.confirmations_ = confirmations_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        if (txBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            tx_ = java.util.Collections.unmodifiableList(tx_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tx_ = tx_;
        } else {
          result.tx_ = txBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.bits_ = bits_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.difficulty_ = difficulty_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.chainwork_ = chainwork_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.previousblockhash_ = previousblockhash_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.nextblockhash_ = nextblockhash_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.soumet.stormtest.Bitcoin.Block) {
          return mergeFrom((com.soumet.stormtest.Bitcoin.Block)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.soumet.stormtest.Bitcoin.Block other) {
        if (other == com.soumet.stormtest.Bitcoin.Block.getDefaultInstance()) return this;
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        if (other.hasConfirmations()) {
          setConfirmations(other.getConfirmations());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (txBuilder_ == null) {
          if (!other.tx_.isEmpty()) {
            if (tx_.isEmpty()) {
              tx_ = other.tx_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTxIsMutable();
              tx_.addAll(other.tx_);
            }
            onChanged();
          }
        } else {
          if (!other.tx_.isEmpty()) {
            if (txBuilder_.isEmpty()) {
              txBuilder_.dispose();
              txBuilder_ = null;
              tx_ = other.tx_;
              bitField0_ = (bitField0_ & ~0x00000010);
              txBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTxFieldBuilder() : null;
            } else {
              txBuilder_.addAllMessages(other.tx_);
            }
          }
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasBits()) {
          setBits(other.getBits());
        }
        if (other.hasDifficulty()) {
          setDifficulty(other.getDifficulty());
        }
        if (other.hasChainwork()) {
          setChainwork(other.getChainwork());
        }
        if (other.hasPreviousblockhash()) {
          setPreviousblockhash(other.getPreviousblockhash());
        }
        if (other.hasNextblockhash()) {
          setNextblockhash(other.getNextblockhash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHash()) {
          
          return false;
        }
        if (!hasConfirmations()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasNonce()) {
          
          return false;
        }
        if (!hasBits()) {
          
          return false;
        }
        if (!hasDifficulty()) {
          
          return false;
        }
        if (!hasChainwork()) {
          
          return false;
        }
        if (!hasPreviousblockhash()) {
          
          return false;
        }
        if (!hasNextblockhash()) {
          
          return false;
        }
        for (int i = 0; i < getTxCount(); i++) {
          if (!getTx(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hash_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              confirmations_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
            case 42: {
              com.soumet.stormtest.Bitcoin.Transaction.Builder subBuilder = com.soumet.stormtest.Bitcoin.Transaction.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTx(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              version_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              time_ = input.readInt32();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              nonce_ = input.readDouble();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              bits_ = input.readBytes();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              difficulty_ = input.readFloat();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              chainwork_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              previousblockhash_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              nextblockhash_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string hash = 1;
      private java.lang.Object hash_ = "";
      public boolean hasHash() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHash() {
        java.lang.Object ref = hash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hash_ = value;
        onChanged();
        return this;
      }
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }
      void setHash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hash_ = value;
        onChanged();
      }
      
      // required int32 confirmations = 2;
      private int confirmations_ ;
      public boolean hasConfirmations() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getConfirmations() {
        return confirmations_;
      }
      public Builder setConfirmations(int value) {
        bitField0_ |= 0x00000002;
        confirmations_ = value;
        onChanged();
        return this;
      }
      public Builder clearConfirmations() {
        bitField0_ = (bitField0_ & ~0x00000002);
        confirmations_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 size = 3;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 height = 4;
      private int height_ ;
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getHeight() {
        return height_;
      }
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .com.soumet.stormtest.Transaction tx = 5;
      private java.util.List<com.soumet.stormtest.Bitcoin.Transaction> tx_ =
        java.util.Collections.emptyList();
      private void ensureTxIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          tx_ = new java.util.ArrayList<com.soumet.stormtest.Bitcoin.Transaction>(tx_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.Transaction, com.soumet.stormtest.Bitcoin.Transaction.Builder, com.soumet.stormtest.Bitcoin.TransactionOrBuilder> txBuilder_;
      
      public java.util.List<com.soumet.stormtest.Bitcoin.Transaction> getTxList() {
        if (txBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tx_);
        } else {
          return txBuilder_.getMessageList();
        }
      }
      public int getTxCount() {
        if (txBuilder_ == null) {
          return tx_.size();
        } else {
          return txBuilder_.getCount();
        }
      }
      public com.soumet.stormtest.Bitcoin.Transaction getTx(int index) {
        if (txBuilder_ == null) {
          return tx_.get(index);
        } else {
          return txBuilder_.getMessage(index);
        }
      }
      public Builder setTx(
          int index, com.soumet.stormtest.Bitcoin.Transaction value) {
        if (txBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxIsMutable();
          tx_.set(index, value);
          onChanged();
        } else {
          txBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTx(
          int index, com.soumet.stormtest.Bitcoin.Transaction.Builder builderForValue) {
        if (txBuilder_ == null) {
          ensureTxIsMutable();
          tx_.set(index, builderForValue.build());
          onChanged();
        } else {
          txBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTx(com.soumet.stormtest.Bitcoin.Transaction value) {
        if (txBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxIsMutable();
          tx_.add(value);
          onChanged();
        } else {
          txBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTx(
          int index, com.soumet.stormtest.Bitcoin.Transaction value) {
        if (txBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTxIsMutable();
          tx_.add(index, value);
          onChanged();
        } else {
          txBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTx(
          com.soumet.stormtest.Bitcoin.Transaction.Builder builderForValue) {
        if (txBuilder_ == null) {
          ensureTxIsMutable();
          tx_.add(builderForValue.build());
          onChanged();
        } else {
          txBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTx(
          int index, com.soumet.stormtest.Bitcoin.Transaction.Builder builderForValue) {
        if (txBuilder_ == null) {
          ensureTxIsMutable();
          tx_.add(index, builderForValue.build());
          onChanged();
        } else {
          txBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTx(
          java.lang.Iterable<? extends com.soumet.stormtest.Bitcoin.Transaction> values) {
        if (txBuilder_ == null) {
          ensureTxIsMutable();
          super.addAll(values, tx_);
          onChanged();
        } else {
          txBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTx() {
        if (txBuilder_ == null) {
          tx_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          txBuilder_.clear();
        }
        return this;
      }
      public Builder removeTx(int index) {
        if (txBuilder_ == null) {
          ensureTxIsMutable();
          tx_.remove(index);
          onChanged();
        } else {
          txBuilder_.remove(index);
        }
        return this;
      }
      public com.soumet.stormtest.Bitcoin.Transaction.Builder getTxBuilder(
          int index) {
        return getTxFieldBuilder().getBuilder(index);
      }
      public com.soumet.stormtest.Bitcoin.TransactionOrBuilder getTxOrBuilder(
          int index) {
        if (txBuilder_ == null) {
          return tx_.get(index);  } else {
          return txBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.soumet.stormtest.Bitcoin.TransactionOrBuilder> 
           getTxOrBuilderList() {
        if (txBuilder_ != null) {
          return txBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tx_);
        }
      }
      public com.soumet.stormtest.Bitcoin.Transaction.Builder addTxBuilder() {
        return getTxFieldBuilder().addBuilder(
            com.soumet.stormtest.Bitcoin.Transaction.getDefaultInstance());
      }
      public com.soumet.stormtest.Bitcoin.Transaction.Builder addTxBuilder(
          int index) {
        return getTxFieldBuilder().addBuilder(
            index, com.soumet.stormtest.Bitcoin.Transaction.getDefaultInstance());
      }
      public java.util.List<com.soumet.stormtest.Bitcoin.Transaction.Builder> 
           getTxBuilderList() {
        return getTxFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.Transaction, com.soumet.stormtest.Bitcoin.Transaction.Builder, com.soumet.stormtest.Bitcoin.TransactionOrBuilder> 
          getTxFieldBuilder() {
        if (txBuilder_ == null) {
          txBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.soumet.stormtest.Bitcoin.Transaction, com.soumet.stormtest.Bitcoin.Transaction.Builder, com.soumet.stormtest.Bitcoin.TransactionOrBuilder>(
                  tx_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          tx_ = null;
        }
        return txBuilder_;
      }
      
      // required int32 version = 6;
      private int version_ ;
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getVersion() {
        return version_;
      }
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000020;
        version_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        version_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 time = 7;
      private int time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getTime() {
        return time_;
      }
      public Builder setTime(int value) {
        bitField0_ |= 0x00000040;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        time_ = 0;
        onChanged();
        return this;
      }
      
      // required double nonce = 8;
      private double nonce_ ;
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getNonce() {
        return nonce_;
      }
      public Builder setNonce(double value) {
        bitField0_ |= 0x00000080;
        nonce_ = value;
        onChanged();
        return this;
      }
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nonce_ = 0D;
        onChanged();
        return this;
      }
      
      // required string bits = 9;
      private java.lang.Object bits_ = "";
      public boolean hasBits() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getBits() {
        java.lang.Object ref = bits_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          bits_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setBits(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        bits_ = value;
        onChanged();
        return this;
      }
      public Builder clearBits() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bits_ = getDefaultInstance().getBits();
        onChanged();
        return this;
      }
      void setBits(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        bits_ = value;
        onChanged();
      }
      
      // required float difficulty = 10;
      private float difficulty_ ;
      public boolean hasDifficulty() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getDifficulty() {
        return difficulty_;
      }
      public Builder setDifficulty(float value) {
        bitField0_ |= 0x00000200;
        difficulty_ = value;
        onChanged();
        return this;
      }
      public Builder clearDifficulty() {
        bitField0_ = (bitField0_ & ~0x00000200);
        difficulty_ = 0F;
        onChanged();
        return this;
      }
      
      // required string chainwork = 11;
      private java.lang.Object chainwork_ = "";
      public boolean hasChainwork() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getChainwork() {
        java.lang.Object ref = chainwork_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          chainwork_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChainwork(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        chainwork_ = value;
        onChanged();
        return this;
      }
      public Builder clearChainwork() {
        bitField0_ = (bitField0_ & ~0x00000400);
        chainwork_ = getDefaultInstance().getChainwork();
        onChanged();
        return this;
      }
      void setChainwork(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        chainwork_ = value;
        onChanged();
      }
      
      // required string previousblockhash = 12;
      private java.lang.Object previousblockhash_ = "";
      public boolean hasPreviousblockhash() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getPreviousblockhash() {
        java.lang.Object ref = previousblockhash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          previousblockhash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPreviousblockhash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        previousblockhash_ = value;
        onChanged();
        return this;
      }
      public Builder clearPreviousblockhash() {
        bitField0_ = (bitField0_ & ~0x00000800);
        previousblockhash_ = getDefaultInstance().getPreviousblockhash();
        onChanged();
        return this;
      }
      void setPreviousblockhash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        previousblockhash_ = value;
        onChanged();
      }
      
      // required string nextblockhash = 13;
      private java.lang.Object nextblockhash_ = "";
      public boolean hasNextblockhash() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getNextblockhash() {
        java.lang.Object ref = nextblockhash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nextblockhash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNextblockhash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        nextblockhash_ = value;
        onChanged();
        return this;
      }
      public Builder clearNextblockhash() {
        bitField0_ = (bitField0_ & ~0x00001000);
        nextblockhash_ = getDefaultInstance().getNextblockhash();
        onChanged();
        return this;
      }
      void setNextblockhash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        nextblockhash_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.soumet.stormtest.Block)
    }
    
    static {
      defaultInstance = new Block(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.soumet.stormtest.Block)
  }
  
  public interface RecordInOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string txid = 1;
    boolean hasTxid();
    String getTxid();
    
    // optional int32 vout = 2;
    boolean hasVout();
    int getVout();
    
    // required string address = 3;
    boolean hasAddress();
    String getAddress();
    
    // required double amount = 4;
    boolean hasAmount();
    double getAmount();
    
    // required uint32 sequence = 5;
    boolean hasSequence();
    int getSequence();
  }
  public static final class RecordIn extends
      com.google.protobuf.GeneratedMessage
      implements RecordInOrBuilder {
    // Use RecordIn.newBuilder() to construct.
    private RecordIn(Builder builder) {
      super(builder);
    }
    private RecordIn(boolean noInit) {}
    
    private static final RecordIn defaultInstance;
    public static RecordIn getDefaultInstance() {
      return defaultInstance;
    }
    
    public RecordIn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordIn_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordIn_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string txid = 1;
    public static final int TXID_FIELD_NUMBER = 1;
    private java.lang.Object txid_;
    public boolean hasTxid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTxid() {
      java.lang.Object ref = txid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          txid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTxidBytes() {
      java.lang.Object ref = txid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        txid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 vout = 2;
    public static final int VOUT_FIELD_NUMBER = 2;
    private int vout_;
    public boolean hasVout() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getVout() {
      return vout_;
    }
    
    // required string address = 3;
    public static final int ADDRESS_FIELD_NUMBER = 3;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required double amount = 4;
    public static final int AMOUNT_FIELD_NUMBER = 4;
    private double amount_;
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getAmount() {
      return amount_;
    }
    
    // required uint32 sequence = 5;
    public static final int SEQUENCE_FIELD_NUMBER = 5;
    private int sequence_;
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSequence() {
      return sequence_;
    }
    
    private void initFields() {
      txid_ = "";
      vout_ = 0;
      address_ = "";
      amount_ = 0D;
      sequence_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTxidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, vout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, amount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, sequence_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTxidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, amount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, sequence_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.soumet.stormtest.Bitcoin.RecordIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.soumet.stormtest.Bitcoin.RecordInOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordIn_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordIn_fieldAccessorTable;
      }
      
      // Construct using com.soumet.stormtest.Bitcoin.RecordIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        txid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        vout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.soumet.stormtest.Bitcoin.RecordIn.getDescriptor();
      }
      
      public com.soumet.stormtest.Bitcoin.RecordIn getDefaultInstanceForType() {
        return com.soumet.stormtest.Bitcoin.RecordIn.getDefaultInstance();
      }
      
      public com.soumet.stormtest.Bitcoin.RecordIn build() {
        com.soumet.stormtest.Bitcoin.RecordIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.soumet.stormtest.Bitcoin.RecordIn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.soumet.stormtest.Bitcoin.RecordIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.soumet.stormtest.Bitcoin.RecordIn buildPartial() {
        com.soumet.stormtest.Bitcoin.RecordIn result = new com.soumet.stormtest.Bitcoin.RecordIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.txid_ = txid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vout_ = vout_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sequence_ = sequence_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.soumet.stormtest.Bitcoin.RecordIn) {
          return mergeFrom((com.soumet.stormtest.Bitcoin.RecordIn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.soumet.stormtest.Bitcoin.RecordIn other) {
        if (other == com.soumet.stormtest.Bitcoin.RecordIn.getDefaultInstance()) return this;
        if (other.hasTxid()) {
          setTxid(other.getTxid());
        }
        if (other.hasVout()) {
          setVout(other.getVout());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAddress()) {
          
          return false;
        }
        if (!hasAmount()) {
          
          return false;
        }
        if (!hasSequence()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              txid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vout_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              address_ = input.readBytes();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              amount_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sequence_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string txid = 1;
      private java.lang.Object txid_ = "";
      public boolean hasTxid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTxid() {
        java.lang.Object ref = txid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          txid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTxid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        txid_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        txid_ = getDefaultInstance().getTxid();
        onChanged();
        return this;
      }
      void setTxid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        txid_ = value;
        onChanged();
      }
      
      // optional int32 vout = 2;
      private int vout_ ;
      public boolean hasVout() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVout() {
        return vout_;
      }
      public Builder setVout(int value) {
        bitField0_ |= 0x00000002;
        vout_ = value;
        onChanged();
        return this;
      }
      public Builder clearVout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vout_ = 0;
        onChanged();
        return this;
      }
      
      // required string address = 3;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        address_ = value;
        onChanged();
      }
      
      // required double amount = 4;
      private double amount_ ;
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getAmount() {
        return amount_;
      }
      public Builder setAmount(double value) {
        bitField0_ |= 0x00000008;
        amount_ = value;
        onChanged();
        return this;
      }
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        amount_ = 0D;
        onChanged();
        return this;
      }
      
      // required uint32 sequence = 5;
      private int sequence_ ;
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSequence() {
        return sequence_;
      }
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000010;
        sequence_ = value;
        onChanged();
        return this;
      }
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sequence_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.soumet.stormtest.RecordIn)
    }
    
    static {
      defaultInstance = new RecordIn(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.soumet.stormtest.RecordIn)
  }
  
  public interface RecordOutOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 n = 1;
    boolean hasN();
    int getN();
    
    // required string address = 2;
    boolean hasAddress();
    String getAddress();
    
    // required double amount = 3;
    boolean hasAmount();
    double getAmount();
  }
  public static final class RecordOut extends
      com.google.protobuf.GeneratedMessage
      implements RecordOutOrBuilder {
    // Use RecordOut.newBuilder() to construct.
    private RecordOut(Builder builder) {
      super(builder);
    }
    private RecordOut(boolean noInit) {}
    
    private static final RecordOut defaultInstance;
    public static RecordOut getDefaultInstance() {
      return defaultInstance;
    }
    
    public RecordOut getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordOut_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordOut_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 n = 1;
    public static final int N_FIELD_NUMBER = 1;
    private int n_;
    public boolean hasN() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getN() {
      return n_;
    }
    
    // required string address = 2;
    public static final int ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required double amount = 3;
    public static final int AMOUNT_FIELD_NUMBER = 3;
    private double amount_;
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getAmount() {
      return amount_;
    }
    
    private void initFields() {
      n_ = 0;
      address_ = "";
      amount_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasN()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, n_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, amount_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, n_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, amount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.RecordOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.soumet.stormtest.Bitcoin.RecordOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.soumet.stormtest.Bitcoin.RecordOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordOut_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_RecordOut_fieldAccessorTable;
      }
      
      // Construct using com.soumet.stormtest.Bitcoin.RecordOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        n_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.soumet.stormtest.Bitcoin.RecordOut.getDescriptor();
      }
      
      public com.soumet.stormtest.Bitcoin.RecordOut getDefaultInstanceForType() {
        return com.soumet.stormtest.Bitcoin.RecordOut.getDefaultInstance();
      }
      
      public com.soumet.stormtest.Bitcoin.RecordOut build() {
        com.soumet.stormtest.Bitcoin.RecordOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.soumet.stormtest.Bitcoin.RecordOut buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.soumet.stormtest.Bitcoin.RecordOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.soumet.stormtest.Bitcoin.RecordOut buildPartial() {
        com.soumet.stormtest.Bitcoin.RecordOut result = new com.soumet.stormtest.Bitcoin.RecordOut(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.n_ = n_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.amount_ = amount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.soumet.stormtest.Bitcoin.RecordOut) {
          return mergeFrom((com.soumet.stormtest.Bitcoin.RecordOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.soumet.stormtest.Bitcoin.RecordOut other) {
        if (other == com.soumet.stormtest.Bitcoin.RecordOut.getDefaultInstance()) return this;
        if (other.hasN()) {
          setN(other.getN());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasN()) {
          
          return false;
        }
        if (!hasAddress()) {
          
          return false;
        }
        if (!hasAmount()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              n_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              address_ = input.readBytes();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              amount_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 n = 1;
      private int n_ ;
      public boolean hasN() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getN() {
        return n_;
      }
      public Builder setN(int value) {
        bitField0_ |= 0x00000001;
        n_ = value;
        onChanged();
        return this;
      }
      public Builder clearN() {
        bitField0_ = (bitField0_ & ~0x00000001);
        n_ = 0;
        onChanged();
        return this;
      }
      
      // required string address = 2;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
      }
      
      // required double amount = 3;
      private double amount_ ;
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getAmount() {
        return amount_;
      }
      public Builder setAmount(double value) {
        bitField0_ |= 0x00000004;
        amount_ = value;
        onChanged();
        return this;
      }
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.soumet.stormtest.RecordOut)
    }
    
    static {
      defaultInstance = new RecordOut(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.soumet.stormtest.RecordOut)
  }
  
  public interface TransactionFullOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string txid = 1;
    boolean hasTxid();
    String getTxid();
    
    // required int32 version = 2;
    boolean hasVersion();
    int getVersion();
    
    // required int32 locktime = 3;
    boolean hasLocktime();
    int getLocktime();
    
    // repeated .com.soumet.stormtest.RecordIn vin = 4;
    java.util.List<com.soumet.stormtest.Bitcoin.RecordIn> 
        getVinList();
    com.soumet.stormtest.Bitcoin.RecordIn getVin(int index);
    int getVinCount();
    java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordInOrBuilder> 
        getVinOrBuilderList();
    com.soumet.stormtest.Bitcoin.RecordInOrBuilder getVinOrBuilder(
        int index);
    
    // repeated .com.soumet.stormtest.RecordOut vout = 5;
    java.util.List<com.soumet.stormtest.Bitcoin.RecordOut> 
        getVoutList();
    com.soumet.stormtest.Bitcoin.RecordOut getVout(int index);
    int getVoutCount();
    java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordOutOrBuilder> 
        getVoutOrBuilderList();
    com.soumet.stormtest.Bitcoin.RecordOutOrBuilder getVoutOrBuilder(
        int index);
    
    // required string blockhash = 6;
    boolean hasBlockhash();
    String getBlockhash();
    
    // required int32 confirmations = 7;
    boolean hasConfirmations();
    int getConfirmations();
    
    // required int32 txtime = 8;
    boolean hasTxtime();
    int getTxtime();
    
    // required int32 blocktime = 9;
    boolean hasBlocktime();
    int getBlocktime();
  }
  public static final class TransactionFull extends
      com.google.protobuf.GeneratedMessage
      implements TransactionFullOrBuilder {
    // Use TransactionFull.newBuilder() to construct.
    private TransactionFull(Builder builder) {
      super(builder);
    }
    private TransactionFull(boolean noInit) {}
    
    private static final TransactionFull defaultInstance;
    public static TransactionFull getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransactionFull getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_TransactionFull_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_TransactionFull_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string txid = 1;
    public static final int TXID_FIELD_NUMBER = 1;
    private java.lang.Object txid_;
    public boolean hasTxid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTxid() {
      java.lang.Object ref = txid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          txid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTxidBytes() {
      java.lang.Object ref = txid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        txid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getVersion() {
      return version_;
    }
    
    // required int32 locktime = 3;
    public static final int LOCKTIME_FIELD_NUMBER = 3;
    private int locktime_;
    public boolean hasLocktime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLocktime() {
      return locktime_;
    }
    
    // repeated .com.soumet.stormtest.RecordIn vin = 4;
    public static final int VIN_FIELD_NUMBER = 4;
    private java.util.List<com.soumet.stormtest.Bitcoin.RecordIn> vin_;
    public java.util.List<com.soumet.stormtest.Bitcoin.RecordIn> getVinList() {
      return vin_;
    }
    public java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordInOrBuilder> 
        getVinOrBuilderList() {
      return vin_;
    }
    public int getVinCount() {
      return vin_.size();
    }
    public com.soumet.stormtest.Bitcoin.RecordIn getVin(int index) {
      return vin_.get(index);
    }
    public com.soumet.stormtest.Bitcoin.RecordInOrBuilder getVinOrBuilder(
        int index) {
      return vin_.get(index);
    }
    
    // repeated .com.soumet.stormtest.RecordOut vout = 5;
    public static final int VOUT_FIELD_NUMBER = 5;
    private java.util.List<com.soumet.stormtest.Bitcoin.RecordOut> vout_;
    public java.util.List<com.soumet.stormtest.Bitcoin.RecordOut> getVoutList() {
      return vout_;
    }
    public java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordOutOrBuilder> 
        getVoutOrBuilderList() {
      return vout_;
    }
    public int getVoutCount() {
      return vout_.size();
    }
    public com.soumet.stormtest.Bitcoin.RecordOut getVout(int index) {
      return vout_.get(index);
    }
    public com.soumet.stormtest.Bitcoin.RecordOutOrBuilder getVoutOrBuilder(
        int index) {
      return vout_.get(index);
    }
    
    // required string blockhash = 6;
    public static final int BLOCKHASH_FIELD_NUMBER = 6;
    private java.lang.Object blockhash_;
    public boolean hasBlockhash() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getBlockhash() {
      java.lang.Object ref = blockhash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          blockhash_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getBlockhashBytes() {
      java.lang.Object ref = blockhash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        blockhash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 confirmations = 7;
    public static final int CONFIRMATIONS_FIELD_NUMBER = 7;
    private int confirmations_;
    public boolean hasConfirmations() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getConfirmations() {
      return confirmations_;
    }
    
    // required int32 txtime = 8;
    public static final int TXTIME_FIELD_NUMBER = 8;
    private int txtime_;
    public boolean hasTxtime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getTxtime() {
      return txtime_;
    }
    
    // required int32 blocktime = 9;
    public static final int BLOCKTIME_FIELD_NUMBER = 9;
    private int blocktime_;
    public boolean hasBlocktime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getBlocktime() {
      return blocktime_;
    }
    
    private void initFields() {
      txid_ = "";
      version_ = 0;
      locktime_ = 0;
      vin_ = java.util.Collections.emptyList();
      vout_ = java.util.Collections.emptyList();
      blockhash_ = "";
      confirmations_ = 0;
      txtime_ = 0;
      blocktime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTxid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLocktime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlockhash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConfirmations()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTxtime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlocktime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getVinCount(); i++) {
        if (!getVin(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getVoutCount(); i++) {
        if (!getVout(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTxidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, locktime_);
      }
      for (int i = 0; i < vin_.size(); i++) {
        output.writeMessage(4, vin_.get(i));
      }
      for (int i = 0; i < vout_.size(); i++) {
        output.writeMessage(5, vout_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getBlockhashBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, confirmations_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, txtime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, blocktime_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTxidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, version_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, locktime_);
      }
      for (int i = 0; i < vin_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, vin_.get(i));
      }
      for (int i = 0; i < vout_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, vout_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getBlockhashBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, confirmations_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, txtime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, blocktime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.soumet.stormtest.Bitcoin.TransactionFull parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.soumet.stormtest.Bitcoin.TransactionFull prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.soumet.stormtest.Bitcoin.TransactionFullOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_TransactionFull_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.soumet.stormtest.Bitcoin.internal_static_com_soumet_stormtest_TransactionFull_fieldAccessorTable;
      }
      
      // Construct using com.soumet.stormtest.Bitcoin.TransactionFull.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVinFieldBuilder();
          getVoutFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        txid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        locktime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (vinBuilder_ == null) {
          vin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          vinBuilder_.clear();
        }
        if (voutBuilder_ == null) {
          vout_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          voutBuilder_.clear();
        }
        blockhash_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        confirmations_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        txtime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        blocktime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.soumet.stormtest.Bitcoin.TransactionFull.getDescriptor();
      }
      
      public com.soumet.stormtest.Bitcoin.TransactionFull getDefaultInstanceForType() {
        return com.soumet.stormtest.Bitcoin.TransactionFull.getDefaultInstance();
      }
      
      public com.soumet.stormtest.Bitcoin.TransactionFull build() {
        com.soumet.stormtest.Bitcoin.TransactionFull result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.soumet.stormtest.Bitcoin.TransactionFull buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.soumet.stormtest.Bitcoin.TransactionFull result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.soumet.stormtest.Bitcoin.TransactionFull buildPartial() {
        com.soumet.stormtest.Bitcoin.TransactionFull result = new com.soumet.stormtest.Bitcoin.TransactionFull(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.txid_ = txid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.locktime_ = locktime_;
        if (vinBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            vin_ = java.util.Collections.unmodifiableList(vin_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.vin_ = vin_;
        } else {
          result.vin_ = vinBuilder_.build();
        }
        if (voutBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            vout_ = java.util.Collections.unmodifiableList(vout_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.vout_ = vout_;
        } else {
          result.vout_ = voutBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.blockhash_ = blockhash_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.confirmations_ = confirmations_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.txtime_ = txtime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.blocktime_ = blocktime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.soumet.stormtest.Bitcoin.TransactionFull) {
          return mergeFrom((com.soumet.stormtest.Bitcoin.TransactionFull)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.soumet.stormtest.Bitcoin.TransactionFull other) {
        if (other == com.soumet.stormtest.Bitcoin.TransactionFull.getDefaultInstance()) return this;
        if (other.hasTxid()) {
          setTxid(other.getTxid());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasLocktime()) {
          setLocktime(other.getLocktime());
        }
        if (vinBuilder_ == null) {
          if (!other.vin_.isEmpty()) {
            if (vin_.isEmpty()) {
              vin_ = other.vin_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureVinIsMutable();
              vin_.addAll(other.vin_);
            }
            onChanged();
          }
        } else {
          if (!other.vin_.isEmpty()) {
            if (vinBuilder_.isEmpty()) {
              vinBuilder_.dispose();
              vinBuilder_ = null;
              vin_ = other.vin_;
              bitField0_ = (bitField0_ & ~0x00000008);
              vinBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVinFieldBuilder() : null;
            } else {
              vinBuilder_.addAllMessages(other.vin_);
            }
          }
        }
        if (voutBuilder_ == null) {
          if (!other.vout_.isEmpty()) {
            if (vout_.isEmpty()) {
              vout_ = other.vout_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureVoutIsMutable();
              vout_.addAll(other.vout_);
            }
            onChanged();
          }
        } else {
          if (!other.vout_.isEmpty()) {
            if (voutBuilder_.isEmpty()) {
              voutBuilder_.dispose();
              voutBuilder_ = null;
              vout_ = other.vout_;
              bitField0_ = (bitField0_ & ~0x00000010);
              voutBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVoutFieldBuilder() : null;
            } else {
              voutBuilder_.addAllMessages(other.vout_);
            }
          }
        }
        if (other.hasBlockhash()) {
          setBlockhash(other.getBlockhash());
        }
        if (other.hasConfirmations()) {
          setConfirmations(other.getConfirmations());
        }
        if (other.hasTxtime()) {
          setTxtime(other.getTxtime());
        }
        if (other.hasBlocktime()) {
          setBlocktime(other.getBlocktime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTxid()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasLocktime()) {
          
          return false;
        }
        if (!hasBlockhash()) {
          
          return false;
        }
        if (!hasConfirmations()) {
          
          return false;
        }
        if (!hasTxtime()) {
          
          return false;
        }
        if (!hasBlocktime()) {
          
          return false;
        }
        for (int i = 0; i < getVinCount(); i++) {
          if (!getVin(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getVoutCount(); i++) {
          if (!getVout(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              txid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              version_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              locktime_ = input.readInt32();
              break;
            }
            case 34: {
              com.soumet.stormtest.Bitcoin.RecordIn.Builder subBuilder = com.soumet.stormtest.Bitcoin.RecordIn.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVin(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.soumet.stormtest.Bitcoin.RecordOut.Builder subBuilder = com.soumet.stormtest.Bitcoin.RecordOut.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addVout(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              blockhash_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              confirmations_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              txtime_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              blocktime_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string txid = 1;
      private java.lang.Object txid_ = "";
      public boolean hasTxid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTxid() {
        java.lang.Object ref = txid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          txid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTxid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        txid_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        txid_ = getDefaultInstance().getTxid();
        onChanged();
        return this;
      }
      void setTxid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        txid_ = value;
        onChanged();
      }
      
      // required int32 version = 2;
      private int version_ ;
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getVersion() {
        return version_;
      }
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 locktime = 3;
      private int locktime_ ;
      public boolean hasLocktime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLocktime() {
        return locktime_;
      }
      public Builder setLocktime(int value) {
        bitField0_ |= 0x00000004;
        locktime_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocktime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        locktime_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .com.soumet.stormtest.RecordIn vin = 4;
      private java.util.List<com.soumet.stormtest.Bitcoin.RecordIn> vin_ =
        java.util.Collections.emptyList();
      private void ensureVinIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          vin_ = new java.util.ArrayList<com.soumet.stormtest.Bitcoin.RecordIn>(vin_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.RecordIn, com.soumet.stormtest.Bitcoin.RecordIn.Builder, com.soumet.stormtest.Bitcoin.RecordInOrBuilder> vinBuilder_;
      
      public java.util.List<com.soumet.stormtest.Bitcoin.RecordIn> getVinList() {
        if (vinBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vin_);
        } else {
          return vinBuilder_.getMessageList();
        }
      }
      public int getVinCount() {
        if (vinBuilder_ == null) {
          return vin_.size();
        } else {
          return vinBuilder_.getCount();
        }
      }
      public com.soumet.stormtest.Bitcoin.RecordIn getVin(int index) {
        if (vinBuilder_ == null) {
          return vin_.get(index);
        } else {
          return vinBuilder_.getMessage(index);
        }
      }
      public Builder setVin(
          int index, com.soumet.stormtest.Bitcoin.RecordIn value) {
        if (vinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVinIsMutable();
          vin_.set(index, value);
          onChanged();
        } else {
          vinBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVin(
          int index, com.soumet.stormtest.Bitcoin.RecordIn.Builder builderForValue) {
        if (vinBuilder_ == null) {
          ensureVinIsMutable();
          vin_.set(index, builderForValue.build());
          onChanged();
        } else {
          vinBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVin(com.soumet.stormtest.Bitcoin.RecordIn value) {
        if (vinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVinIsMutable();
          vin_.add(value);
          onChanged();
        } else {
          vinBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVin(
          int index, com.soumet.stormtest.Bitcoin.RecordIn value) {
        if (vinBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVinIsMutable();
          vin_.add(index, value);
          onChanged();
        } else {
          vinBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVin(
          com.soumet.stormtest.Bitcoin.RecordIn.Builder builderForValue) {
        if (vinBuilder_ == null) {
          ensureVinIsMutable();
          vin_.add(builderForValue.build());
          onChanged();
        } else {
          vinBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVin(
          int index, com.soumet.stormtest.Bitcoin.RecordIn.Builder builderForValue) {
        if (vinBuilder_ == null) {
          ensureVinIsMutable();
          vin_.add(index, builderForValue.build());
          onChanged();
        } else {
          vinBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVin(
          java.lang.Iterable<? extends com.soumet.stormtest.Bitcoin.RecordIn> values) {
        if (vinBuilder_ == null) {
          ensureVinIsMutable();
          super.addAll(values, vin_);
          onChanged();
        } else {
          vinBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVin() {
        if (vinBuilder_ == null) {
          vin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          vinBuilder_.clear();
        }
        return this;
      }
      public Builder removeVin(int index) {
        if (vinBuilder_ == null) {
          ensureVinIsMutable();
          vin_.remove(index);
          onChanged();
        } else {
          vinBuilder_.remove(index);
        }
        return this;
      }
      public com.soumet.stormtest.Bitcoin.RecordIn.Builder getVinBuilder(
          int index) {
        return getVinFieldBuilder().getBuilder(index);
      }
      public com.soumet.stormtest.Bitcoin.RecordInOrBuilder getVinOrBuilder(
          int index) {
        if (vinBuilder_ == null) {
          return vin_.get(index);  } else {
          return vinBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordInOrBuilder> 
           getVinOrBuilderList() {
        if (vinBuilder_ != null) {
          return vinBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vin_);
        }
      }
      public com.soumet.stormtest.Bitcoin.RecordIn.Builder addVinBuilder() {
        return getVinFieldBuilder().addBuilder(
            com.soumet.stormtest.Bitcoin.RecordIn.getDefaultInstance());
      }
      public com.soumet.stormtest.Bitcoin.RecordIn.Builder addVinBuilder(
          int index) {
        return getVinFieldBuilder().addBuilder(
            index, com.soumet.stormtest.Bitcoin.RecordIn.getDefaultInstance());
      }
      public java.util.List<com.soumet.stormtest.Bitcoin.RecordIn.Builder> 
           getVinBuilderList() {
        return getVinFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.RecordIn, com.soumet.stormtest.Bitcoin.RecordIn.Builder, com.soumet.stormtest.Bitcoin.RecordInOrBuilder> 
          getVinFieldBuilder() {
        if (vinBuilder_ == null) {
          vinBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.soumet.stormtest.Bitcoin.RecordIn, com.soumet.stormtest.Bitcoin.RecordIn.Builder, com.soumet.stormtest.Bitcoin.RecordInOrBuilder>(
                  vin_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          vin_ = null;
        }
        return vinBuilder_;
      }
      
      // repeated .com.soumet.stormtest.RecordOut vout = 5;
      private java.util.List<com.soumet.stormtest.Bitcoin.RecordOut> vout_ =
        java.util.Collections.emptyList();
      private void ensureVoutIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          vout_ = new java.util.ArrayList<com.soumet.stormtest.Bitcoin.RecordOut>(vout_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.RecordOut, com.soumet.stormtest.Bitcoin.RecordOut.Builder, com.soumet.stormtest.Bitcoin.RecordOutOrBuilder> voutBuilder_;
      
      public java.util.List<com.soumet.stormtest.Bitcoin.RecordOut> getVoutList() {
        if (voutBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vout_);
        } else {
          return voutBuilder_.getMessageList();
        }
      }
      public int getVoutCount() {
        if (voutBuilder_ == null) {
          return vout_.size();
        } else {
          return voutBuilder_.getCount();
        }
      }
      public com.soumet.stormtest.Bitcoin.RecordOut getVout(int index) {
        if (voutBuilder_ == null) {
          return vout_.get(index);
        } else {
          return voutBuilder_.getMessage(index);
        }
      }
      public Builder setVout(
          int index, com.soumet.stormtest.Bitcoin.RecordOut value) {
        if (voutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoutIsMutable();
          vout_.set(index, value);
          onChanged();
        } else {
          voutBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setVout(
          int index, com.soumet.stormtest.Bitcoin.RecordOut.Builder builderForValue) {
        if (voutBuilder_ == null) {
          ensureVoutIsMutable();
          vout_.set(index, builderForValue.build());
          onChanged();
        } else {
          voutBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addVout(com.soumet.stormtest.Bitcoin.RecordOut value) {
        if (voutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoutIsMutable();
          vout_.add(value);
          onChanged();
        } else {
          voutBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addVout(
          int index, com.soumet.stormtest.Bitcoin.RecordOut value) {
        if (voutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVoutIsMutable();
          vout_.add(index, value);
          onChanged();
        } else {
          voutBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addVout(
          com.soumet.stormtest.Bitcoin.RecordOut.Builder builderForValue) {
        if (voutBuilder_ == null) {
          ensureVoutIsMutable();
          vout_.add(builderForValue.build());
          onChanged();
        } else {
          voutBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addVout(
          int index, com.soumet.stormtest.Bitcoin.RecordOut.Builder builderForValue) {
        if (voutBuilder_ == null) {
          ensureVoutIsMutable();
          vout_.add(index, builderForValue.build());
          onChanged();
        } else {
          voutBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVout(
          java.lang.Iterable<? extends com.soumet.stormtest.Bitcoin.RecordOut> values) {
        if (voutBuilder_ == null) {
          ensureVoutIsMutable();
          super.addAll(values, vout_);
          onChanged();
        } else {
          voutBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearVout() {
        if (voutBuilder_ == null) {
          vout_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          voutBuilder_.clear();
        }
        return this;
      }
      public Builder removeVout(int index) {
        if (voutBuilder_ == null) {
          ensureVoutIsMutable();
          vout_.remove(index);
          onChanged();
        } else {
          voutBuilder_.remove(index);
        }
        return this;
      }
      public com.soumet.stormtest.Bitcoin.RecordOut.Builder getVoutBuilder(
          int index) {
        return getVoutFieldBuilder().getBuilder(index);
      }
      public com.soumet.stormtest.Bitcoin.RecordOutOrBuilder getVoutOrBuilder(
          int index) {
        if (voutBuilder_ == null) {
          return vout_.get(index);  } else {
          return voutBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.soumet.stormtest.Bitcoin.RecordOutOrBuilder> 
           getVoutOrBuilderList() {
        if (voutBuilder_ != null) {
          return voutBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vout_);
        }
      }
      public com.soumet.stormtest.Bitcoin.RecordOut.Builder addVoutBuilder() {
        return getVoutFieldBuilder().addBuilder(
            com.soumet.stormtest.Bitcoin.RecordOut.getDefaultInstance());
      }
      public com.soumet.stormtest.Bitcoin.RecordOut.Builder addVoutBuilder(
          int index) {
        return getVoutFieldBuilder().addBuilder(
            index, com.soumet.stormtest.Bitcoin.RecordOut.getDefaultInstance());
      }
      public java.util.List<com.soumet.stormtest.Bitcoin.RecordOut.Builder> 
           getVoutBuilderList() {
        return getVoutFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.soumet.stormtest.Bitcoin.RecordOut, com.soumet.stormtest.Bitcoin.RecordOut.Builder, com.soumet.stormtest.Bitcoin.RecordOutOrBuilder> 
          getVoutFieldBuilder() {
        if (voutBuilder_ == null) {
          voutBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.soumet.stormtest.Bitcoin.RecordOut, com.soumet.stormtest.Bitcoin.RecordOut.Builder, com.soumet.stormtest.Bitcoin.RecordOutOrBuilder>(
                  vout_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          vout_ = null;
        }
        return voutBuilder_;
      }
      
      // required string blockhash = 6;
      private java.lang.Object blockhash_ = "";
      public boolean hasBlockhash() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getBlockhash() {
        java.lang.Object ref = blockhash_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          blockhash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setBlockhash(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        blockhash_ = value;
        onChanged();
        return this;
      }
      public Builder clearBlockhash() {
        bitField0_ = (bitField0_ & ~0x00000020);
        blockhash_ = getDefaultInstance().getBlockhash();
        onChanged();
        return this;
      }
      void setBlockhash(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        blockhash_ = value;
        onChanged();
      }
      
      // required int32 confirmations = 7;
      private int confirmations_ ;
      public boolean hasConfirmations() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getConfirmations() {
        return confirmations_;
      }
      public Builder setConfirmations(int value) {
        bitField0_ |= 0x00000040;
        confirmations_ = value;
        onChanged();
        return this;
      }
      public Builder clearConfirmations() {
        bitField0_ = (bitField0_ & ~0x00000040);
        confirmations_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 txtime = 8;
      private int txtime_ ;
      public boolean hasTxtime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getTxtime() {
        return txtime_;
      }
      public Builder setTxtime(int value) {
        bitField0_ |= 0x00000080;
        txtime_ = value;
        onChanged();
        return this;
      }
      public Builder clearTxtime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        txtime_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 blocktime = 9;
      private int blocktime_ ;
      public boolean hasBlocktime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getBlocktime() {
        return blocktime_;
      }
      public Builder setBlocktime(int value) {
        bitField0_ |= 0x00000100;
        blocktime_ = value;
        onChanged();
        return this;
      }
      public Builder clearBlocktime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        blocktime_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.soumet.stormtest.TransactionFull)
    }
    
    static {
      defaultInstance = new TransactionFull(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.soumet.stormtest.TransactionFull)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_soumet_stormtest_Transaction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_soumet_stormtest_Transaction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_soumet_stormtest_Block_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_soumet_stormtest_Block_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_soumet_stormtest_RecordIn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_soumet_stormtest_RecordIn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_soumet_stormtest_RecordOut_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_soumet_stormtest_RecordOut_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_soumet_stormtest_TransactionFull_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_soumet_stormtest_TransactionFull_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rbitcoin.proto\022\024com.soumet.stormtest\"\033\n" +
      "\013Transaction\022\014\n\004hash\030\001 \002(\t\"\216\002\n\005Block\022\014\n\004" +
      "hash\030\001 \002(\t\022\025\n\rconfirmations\030\002 \002(\005\022\014\n\004siz" +
      "e\030\003 \002(\005\022\016\n\006height\030\004 \002(\005\022-\n\002tx\030\005 \003(\0132!.co" +
      "m.soumet.stormtest.Transaction\022\017\n\007versio" +
      "n\030\006 \002(\005\022\014\n\004time\030\007 \002(\005\022\r\n\005nonce\030\010 \002(\001\022\014\n\004" +
      "bits\030\t \002(\t\022\022\n\ndifficulty\030\n \002(\002\022\021\n\tchainw" +
      "ork\030\013 \002(\t\022\031\n\021previousblockhash\030\014 \002(\t\022\025\n\r" +
      "nextblockhash\030\r \002(\t\"Y\n\010RecordIn\022\014\n\004txid\030" +
      "\001 \001(\t\022\014\n\004vout\030\002 \001(\005\022\017\n\007address\030\003 \002(\t\022\016\n\006",
      "amount\030\004 \002(\001\022\020\n\010sequence\030\005 \002(\r\"7\n\tRecord" +
      "Out\022\t\n\001n\030\001 \002(\005\022\017\n\007address\030\002 \002(\t\022\016\n\006amoun" +
      "t\030\003 \002(\001\"\353\001\n\017TransactionFull\022\014\n\004txid\030\001 \002(" +
      "\t\022\017\n\007version\030\002 \002(\005\022\020\n\010locktime\030\003 \002(\005\022+\n\003" +
      "vin\030\004 \003(\0132\036.com.soumet.stormtest.RecordI" +
      "n\022-\n\004vout\030\005 \003(\0132\037.com.soumet.stormtest.R" +
      "ecordOut\022\021\n\tblockhash\030\006 \002(\t\022\025\n\rconfirmat" +
      "ions\030\007 \002(\005\022\016\n\006txtime\030\010 \002(\005\022\021\n\tblocktime\030" +
      "\t \002(\005B\tB\007Bitcoin"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_soumet_stormtest_Transaction_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_soumet_stormtest_Transaction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_soumet_stormtest_Transaction_descriptor,
              new java.lang.String[] { "Hash", },
              com.soumet.stormtest.Bitcoin.Transaction.class,
              com.soumet.stormtest.Bitcoin.Transaction.Builder.class);
          internal_static_com_soumet_stormtest_Block_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_soumet_stormtest_Block_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_soumet_stormtest_Block_descriptor,
              new java.lang.String[] { "Hash", "Confirmations", "Size", "Height", "Tx", "Version", "Time", "Nonce", "Bits", "Difficulty", "Chainwork", "Previousblockhash", "Nextblockhash", },
              com.soumet.stormtest.Bitcoin.Block.class,
              com.soumet.stormtest.Bitcoin.Block.Builder.class);
          internal_static_com_soumet_stormtest_RecordIn_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_soumet_stormtest_RecordIn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_soumet_stormtest_RecordIn_descriptor,
              new java.lang.String[] { "Txid", "Vout", "Address", "Amount", "Sequence", },
              com.soumet.stormtest.Bitcoin.RecordIn.class,
              com.soumet.stormtest.Bitcoin.RecordIn.Builder.class);
          internal_static_com_soumet_stormtest_RecordOut_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_soumet_stormtest_RecordOut_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_soumet_stormtest_RecordOut_descriptor,
              new java.lang.String[] { "N", "Address", "Amount", },
              com.soumet.stormtest.Bitcoin.RecordOut.class,
              com.soumet.stormtest.Bitcoin.RecordOut.Builder.class);
          internal_static_com_soumet_stormtest_TransactionFull_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_soumet_stormtest_TransactionFull_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_soumet_stormtest_TransactionFull_descriptor,
              new java.lang.String[] { "Txid", "Version", "Locktime", "Vin", "Vout", "Blockhash", "Confirmations", "Txtime", "Blocktime", },
              com.soumet.stormtest.Bitcoin.TransactionFull.class,
              com.soumet.stormtest.Bitcoin.TransactionFull.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
